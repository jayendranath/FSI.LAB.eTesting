@{
    ViewBag.Title = "Proctor Console";
}


@*<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@

@*<script src="~/Controllers/conHub.js"></script>*@

<script type="text/javascript">
    //$(document).ready(function () {


    //});
    var procID = "@System.Web.HttpContext.Current.Session["AdLoginPNo"].ToString()";
    var AssessmentID = "@ViewData["AssessmentID"].ToString()";
    var AssessmentName = "@ViewData["AssessmentName"].ToString()";
    var $id = @ViewData["id"];



    function abc() {
        $("#tblnmlist tr:gt(0)").each(function () {
            var currentTD = $(this).closest('tr');

            if (AssessmentID === "completed") {
                //$('#btnSendMsg').html('Review');
                $(currentTD).find('#btnSendMsg').html('Review');
            }

            if (AssessmentID === "inprogress") {
                $(currentTD).find('#btnSendMsg').html('Send Message');
            }

        });
    }
    $(function(){
        $('#' + $id + ' #divExamTitle').html(AssessmentName);
        $('#' + $id + ' #hdnexschid').val(AssessmentID);
        $('#' + $id + ' #hdnstatusid').val("@ViewBag.StatusId");
        $('#tblnmlist td button').on("click", "#btnStartExam", function (e) {
            // Call the Send method on the hub.
            if (e.currentTarget.id === "btnStartExam") {
                var name = $(this).parents("tr").find("td:nth-child(1)").text();
                // Call the Send method on the hub.
                //con.start();

                hub.invoke('StartIndExam', name);

            }
        });

        $('#tblnmlist' + $id).on('click', '#btnSendMsg', function (e) {
            //$('#btnSendMsg').on('click', function () {
            if (e.currentTarget.id === "btnSendMsg") {
                var id = $(this).parents("tr").find("td:nth-child(2)").text();
                var exname = $(this).parents("tr").find("td:nth-child(3)").text();
                //var msg = prompt("Message to Examinee(" + id + "):", "");
                ////con.start();
                //if (msg != null)
                //    hub.invoke('SendInvidualMsg', id, msg);
                //$(this).attr('src', "@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Message.png?@DateTime.Now.Ticks.ToString()");
                $(this).parents("tr").children('td:nth-child(11)').find('#btnSendMsg img').attr('src', "@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Message.png?@DateTime.Now.Ticks.ToString()");
                expandSidebar(id,exname);
                populatechathistory($(this).parents("tr").find("td:nth-child(4)").text());
            }
        });

        $('#tblnmlist' + $id).on('click', '#btnPauseExam', function (e) {
            if (e.currentTarget.id === "btnPauseExam") {
                var id = $(this).parents("tr").find("td:nth-child(4)").text();
                var name = $('#@ViewData["id"].ToString() #divExamTitle').html();
                $(this).parents("tr").children('td:nth-child(11)').find('#btnPauseExam img').attr('src', "@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Resume.png?@DateTime.Now.Ticks.ToString()");
                hub.invoke("PauseExam", name, id, '@FSI.LAB.eTesting.Hub.Models.GlobalVariables.ProctorID.ToString()');
            }
        });

        $('#tblnmlist' + $id).on('click', '#btnMisConduct', function (e) {
            if (e.currentTarget.id === "btnMisConduct") {
                var id = $(this).parents("tr").find("td:nth-child(4)").text();
                var name = $('#@ViewData["id"].ToString() #divExamTitle').html();
                var msg = prompt("Please provide detail description of incident for (" + id + "):", "");
                if (msg != null){
                    hub.invoke("IndMisconduct", name, id, '@FSI.LAB.eTesting.Hub.Models.GlobalVariables.ProctorID.ToString()');
                }
            }
        });

        $(document).on("click", "#btnSendGrpMsg", function () {
            //var row = $(this).closest('tr');
            //var name = $('#SelectAssessment  option:selected').text();
            var name = $(this).closest('tr').find("#SelectAssessment  option:selected").text();
            var msg = $(this).closest('tr').find('input[id="txtGrpMsg"]').val();
            //con.start();
            hub.invoke('SendGroupMsg', name, msg);
        });

        $(document).on("click", ".tbclass", function () {
            $id = $(this).prop('name');
            //alert($id);
        })

        $(document).on("click", '#' + $id + ' #btnGrpStartExam', function () {
            //alert($(this).parents('div').parents('div').parents('div').parents('div').parents('div').parents('div').prop('id'));
            //alert("parent div id :" + $(this).closest('.parentDiv').prop('id'));
            if ($('#tblnmlist' + $id )[0].rows.length <= 1){
                $('#pConfirm').html('Cannot start exam as there are no Clients to take exam.');
                $('#hdnCofirmFrom').val("Message");
                $("#modal-Confirm").modal({
                    backdrop: 'static',
                    keyboard: false
                });
                $("#btnNo").html('Ok');
                $("#btnYes").toggle('Hide');
                $("#btnNo").click(function(){
                    $("#modal-Confirm").hide();
                    $("#btnYes").toggle('Hide');
                    $("#btnNo").html('No');
                });
                return;
            }
            var dt = new Date();
            var currentTime = ("0" + (dt.getMonth() + 1)).slice(-2) + '/' + ("0" + dt.getDate()).slice(-2) + '/' + dt.getFullYear() + ' ' + ("0" + (dt.getHours())).slice(-2) + ":" + ("0" + (dt.getMinutes())).slice(-2) + ":" + ("0" + (dt.getSeconds())).slice(-2);
            $('#' + $id + ' #divStTime').html(currentTime + ' CST' );
            var currentTime1 =("0" + (dt.getMonth() + 1)).slice(-2) + '/' + ("0" + dt.getDate()).slice(-2) + '/' + dt.getFullYear()  + ' ' + ("0" + (dt.getHours() + 1)).slice(-2) + ":" + ("0" + (dt.getMinutes()+30)).slice(-2) + ":" + ("0" + (dt.getSeconds())).slice(-2);
            $('#' + $id + ' #divEndTime').html(currentTime1 + ' CST' );
            var name = $('#' + $id + ' #divExamTitle').html();// $('#SelectAssessment  option:selected').text();
            //con.start();


            setStartExamStatusAPI();

            setExamineeStatus();
            setCountDown();
            $('#' + $id + ' #btnGrpStartExam').html("End Exam");
            //disableDelButton();
        });
    })

    //function disableDelButton(){
    //    $("#tblnmlist" + $id + " tr:gt(0)").each(function () {
    //        var this_row = $(this);
    //        var exmineeid = $.trim(this_row.find('td:eq(3)').html());
    //        $(this).children('td:nth-child(11)').find('#btnDelEx').off('click');
    //    });
    //}

    //function fnCloseTab(tbliname) {
    //    //$('#pConfirm').html('Do you want to close Proctoring tab?');
    //    //$('#hdnTabNo').val(tbliname);
    //    $("#modal-TabCloseConfirm").modal("toggle");
    //    //$("#modal-TabCloseConfirm").show();
    //}

    //function fnCloseTab(tbliname) {
    //    debugger;

    //   /* Show edit event modal */
    //    $('#modal-TabCloseConfirm').modal('show');
    //}

    $('.btntabclose').click(function() {
        //$(document).on("click", "#btnTabClose", function () {
        //debugger;
        var id = ($(this).closest("li")[0].id).substring(3);
        $('#hdnTabNo').val(id);
        @*hub.invoke('ProctorClosedConsoleTab', '@System.Web.HttpContext.Current.Session["AdLoginPNo"].ToString()');
        $("#li_" + id).remove();
        $("div").remove("#" + id);
        var num_tabs = $("#tabs li").length;
        if (num_tabs ==0 )
            window.top.close();*@
        //$("#modal-TabCloseConfirm").modal('show');
        //$("#modal-TabCloseConfirm").show();


        ConfirmDialog('Are you sure you want to Proctoring tab?');

    });

    function ConfirmDialog(message){
        $('<div></div>').appendTo('body')
                        .html('<div><h6>'+message+'?</h6> </div>')
                        .dialog({
                            modal: true, title: 'Delete message', zIndex: 10000, autoOpen: true,
                            width: 'auto', resizable: false,
                            buttons: {
                                Yes: function () {
                                    // $(obj).removeAttr('onclick');
                                    // $(obj).parents('.Parent').remove();

                                    //$('body').append('<h1>Confirm Dialog Result: <i>Yes</i></h1>');
                                    hub.invoke('ProctorClosedConsoleTab', '@System.Web.HttpContext.Current.Session["AdLoginPNo"].ToString()');
                                    $("#li_" + $('#hdnTabNo').val()).remove();
                                    $("div").remove("#" + $('#hdnTabNo').val());
                                    var num_tabs = $("#tabs li").length;
                                    if (num_tabs ==0 )
                                        window.top.close();
                                    $(this).dialog("close");
                                },
                                No: function () { $('body').append('<h1>Confirm Dialog Result: <i>No</i></h1>');

                                    $(this).dialog("close");
                                }
                            },
                            close: function (event, ui) {
                                $(this).remove();
                            }
                        });
    };

    $("#btnTBCloseYes").click(function () {
        $("#modal-TabCloseConfirm").modal("toggle");
        setTimeout(function () {
            hub.invoke('ProctorClosedConsoleTab', '@System.Web.HttpContext.Current.Session["AdLoginPNo"].ToString()');
            $("#li_" + $('#hdnTabNo').val()).remove();
            $("div").remove("#" + $('#hdnTabNo').val());
            var num_tabs = $("#tabs li").length;
            if (num_tabs ==0 )
                window.top.close();
            //alert(num_tabs);
        }, 500);
        //$("#modal-TabCloseConfirm").remove()

    })
    $("#btnTBCloseNo").click(function () {

        $("#modal-TabCloseConfirm").modal("hide");
        //window.setTimeout('$("#modal-TabCloseConfirm").hide()',1000);
    })

    function setStartExamStatusAPI(){
        var exsessionid = "";
        if ($('#' + $id + ' #btnGrpStartExam').html() == 'Start Exam'){
            if ($('#' + $id + ' #hdnexsessid').val() == 0 || $('#' + $id + ' #hdnexsessid').val() == ''){
                var ResponseDetails = JSON.stringify({
                    //"ExamSessionId":$('#' + $id + ' #hdnexsessid').val(),
                    "ExamScheduleId": $('#' + $id + ' #hdnexschid').val(),
                    //"StatusId":"2",
                    "CreatedById": "@System.Web.HttpContext.Current.Session["AdLoginGuid"].ToString()",
                    //"ElapsedTime":"0",
                    "CreatedByIp":'@ViewData["ipAddress"]',
                });

                $.ajax({
                    type: "POST",
                    url: '@(System.Configuration.ConfigurationManager.AppSettings["webAPIURL"].ToString())/api/exam/startExam',
                    data: ResponseDetails,
                    contentType: "application/json",
                    dataType: 'json',
                    async: false,
                    success: function (data, status, xhr) {
                        //alert("The result is : " + status + ": " + data);
                        $('#' + $id + ' #hdnexsessid').val(data);
                        var name = $('#' + $id + ' #divExamTitle').html();
                        if ($('#' + $id + ' #btnGrpStartExam').html() == 'Start Exam'){
                            hub.invoke('StartGrpExam', name, '@FSI.LAB.eTesting.Hub.Models.GlobalVariables.LoginID');
                            hub.invoke('ExamScheduleStatusIdChanged',"ProctorDashboard", $('#' + $id + ' #hdnexschid').val(),2);
                            var link1 = '@Url.Action("UpdateAssessmentStart", "Home", new { AssessmentName = "-1" })';
                            link1 = link1.replace("-1", name);
                            $.ajax({ url: link1, type: "GET", cache: false, async: false, });
                        }


                    },
                    error: function (xhr) {
                        alert("err: " + xhr.statusText);
                    }
                });
            }

            else{

                var statusid = '';
                $.ajax({
                    type: "GET",
                    url: '@(System.Configuration.ConfigurationManager.AppSettings["webAPIURL"].ToString())/api/examschedule/' + $('#' + $id + ' #hdnexschid').val() + '/status',
                    data: ResponseDetails,
                    contentType: "application/json",
                    dataType: 'json',
                    async: false,
                    success: function (data, status, xhr) {
                        //alert("The result is : " + status + ": " + data);
                        statusid = data;
                    },
                    error: function (xhr) {
                        alert("err: " + xhr.statusText);
                    }
                });
                if (statusid == '@FSI.LAB.eTesting.Hub.Models.GlobalVariables.ExamSessionType.Terminated.GetHashCode()') {
                    var ResponseDetails = JSON.stringify({
                        "ExamSessionId":$('#' + $id + ' #hdnexsessid').val(),
                        //"ExamScheduleId": $('#' + $id + ' #hdnexschid').val(),
                        //"StatusId":"2",
                        "CreatedById": "@System.Web.HttpContext.Current.Session["AdLoginGuid"].ToString()",
                        //"ElapsedTime":"0",
                        "CreatedByIp":'@ViewData["ipAddress"]',
                    });

                    $.ajax({
                        type: "POST",
                        url: '@(System.Configuration.ConfigurationManager.AppSettings["webAPIURL"].ToString())/api/exam/resumeexam',
                        data: ResponseDetails,
                        contentType: "application/json",
                        dataType: 'json',
                        async: false,
                        success: function (data, status, xhr) {
                            //alert("The result is : " + status + ": " + data);
                            $('#' + $id + ' #hdnexsessid').val(data);
                            var name = $('#' + $id + ' #divExamTitle').html();
                            if ($('#' + $id + ' #btnGrpStartExam').html() == 'Start Exam'){
                                hub.invoke('StartGrpExam', name, '@FSI.LAB.eTesting.Hub.Models.GlobalVariables.LoginID');
                                hub.invoke('ExamScheduleStatusIdChanged',"ProctorDashboard", $('#' + $id + ' #hdnexschid').val(),2);
                                var link1 = '@Url.Action("UpdateAssessmentStart", "Home", new { AssessmentName = "-1" })';
                                link1 = link1.replace("-1", name);
                                $.ajax({ url: link1, type: "GET", cache: false, async: false, });
                            }


                        },
                        error: function (xhr) {
                            alert("err: " + xhr.statusText);
                        }
                    });

                }

            }
        }
        if ($('#' + $id + ' #btnGrpStartExam').html() == 'End Exam'){
            var ResponseDetails = JSON.stringify({
                "ExamSessionId":$('#' + $id + ' #hdnexsessid').val(),
                "ExamScheduleId":$('#' + $id + ' #hdnexschid').val(),
                //"StatusId":"4",
                "CreatedById": "@System.Web.HttpContext.Current.Session["AdLoginGuid"].ToString()",
                "CreatedByIp":'@ViewData["ipAddress"]',
            });
            //}
            //if ($('#' + $id + ' #btnGrpStartExam').html() == 'Start Exam' || $('#' + $id + ' #btnGrpStartExam').html() == 'End Exam'){
            debugger;
            $.ajax({
                type: "POST",
                url: '@(System.Configuration.ConfigurationManager.AppSettings["webAPIURL"].ToString())/api/exam/endexam',
                data: ResponseDetails,
                contentType: "application/json",
                dataType: 'json',
                async: false,
                success: function (data, status, xhr) {
                    //alert("The result is : " + status + ": " + data);
                    $('#' + $id + ' #hdnexsessid').val(data);
                    debugger;
                    var name = $('#' + $id + ' #divExamTitle').html();
                    if ($('#' + $id + ' #btnGrpStartExam').html() == 'End Exam'){
                        hub.invoke('EndGrpExam', name, '@FSI.LAB.eTesting.Hub.Models.GlobalVariables.LoginID');
                        hub.invoke('ExamScheduleStatusIdChanged',"ProctorDashboard" ,$('#' + $id + ' #hdnexschid').val(),4);
                        var link1 = '@Url.Action("UpdateAssessmentStart", "Home", new { AssessmentName = "-1" })';
                        link1 = link1.replace("-1", name);
                        $.ajax({ url: link1, type: "GET", cache: false, async: false, });
                    }
                },
                error: function (xhr) {
                    alert("err: " + xhr.statusText);
                }
            });
        }


    }

    function setExamineeStatus() {
        var rowno = 0; namerow = 0;
        $('#@ViewData["id"].ToString() #tblnmlist tr:gt(0)').each(function () {
            var this_row = $(this);
            var exname = $.trim(this_row.find('td:eq(3)').html())
            rowno++;
            var status = 0;
            var link1 = '@Url.Action("GetExamineeStatusCtrl", "Home")'; //, new { ExamineeName = "-1", grpName = "-2" })';
            link1 = link1.replace("-1", exname);
            link1 = link1.replace("-2", $('#@ViewData["id"].ToString() #divExamTitle').html());

            $.ajax({
                url: link1, type: "GET", cache: false, async: false, datatype: "json",
                data:
                    {
                        ExamineeName: exname,
                        grpName: $('#@ViewData["id"].ToString() #divExamTitle').html()
                    },
                success: function (data) {
                    status = data;
                }
            });
            if ($.inArray("|", status) > 0) {
                if (status.split("|")[0] > 0) {
                    $(this).children('td:nth-child(8)').find('div[id="circle1"]').css('background-color', 'green');
                    //$(this).children('td:nth-child(5)').html(new Date().toLocaleString());
                    //$(this).children('td:nth-child(6)').css('background-color', 'green');
                    var myTable = document.getElementById('tblnmlist');
                    myTable.rows[rowno].cells[0].innerHTML = status.split("|")[1];
                }
            }
            else if (status > 0) {
                $(this).children('td:nth-child(8)').find('div[id="circle1"]').css('background-color', 'green');
                //$(this).children('td:nth-child(5)').html(new Date().toLocaleString());
                //$(this).children('td:nth-child(6)').css('background-color', 'green');
                var myTable = document.getElementById('tblnmlist');
                myTable.rows[rowno].cells[0].innerHTML = status;
            }
        });
    }

    function deleteRow(row) {

        if ($('#' + $id + ' #btnGrpStartExam').html() == 'End Exam'){
            return;
        }
        //  $("#modal-Confirm").modal('toggle');
        $('#pConfirm').html('Do you want delete client from exam?');
        $('#hdnCofirmFrom').val("ExamineeDel");
        $("#modal-Confirm").modal({
            backdrop: 'static',
            keyboard: false
        });
        $("#btnYes").click(function(){
            if ( $('#hdnCofirmFrom').val() == "ExamineeDel"){

                var i = row.parentNode.parentNode;
                if (i.parentNode.rowIndex > 0)
                    $(row).closest("tr").remove();
                $("#modal-Confirm").toggle('hide');
            }

        })
        $("#btnNo").click(function(){
            if ( $('#hdnCofirmFrom').val() == "ExamineeDel"){
                //$("#modal-Confirm").hide();
            }
        })

        //document.getElementById('tblnmlist').deleteRow(i);
    }


    $('#tblnmlist' + $id).on('click', '#btnExExtendTime', function (e) {
        if (e.currentTarget.id === "btnExExtendTime") {
            var id = $(this).parents("tr").find("td:nth-child(2)").text();
            var exname = $(this).parents("tr").find("td:nth-child(3)").text();
            $('#hdnExId').val(id);
            $('#hdnExamineeSessId').val($(this).parents("tr").find("td:nth-child(1)").text());
            $('#extendTimeFor').html(exname);
            $('#modal-ExtendIndTime').modal('toggle');
        }
    });

    //btnExExtendTimeResonse
    $('#btnExExtendTimeResonse').on('click', function (e) {
        hub.invoke("ProctorConformedExtendExam",AssessmentName, $('#hdnExId').val(), $('#txtExExtendTime').val());
        var ResponseDetails = JSON.stringify({
            "ExamineeSessionId":$('#hdnExamineeSessId').val(),
            "AdditionalTime":$('#txtExExtendTime').val(),
            "CreatedById":"@System.Web.HttpContext.Current.Session["AdLoginGuid"].ToString()",
            "CreatedByIp":'@ViewData["ipAddress"]'
        });

        $.ajax({
            type: "POST",
            url: '@(System.Configuration.ConfigurationManager.AppSettings["webAPIURL"].ToString())/api/examinee/SaveAdditionalTime',
            data: ResponseDetails,
            contentType: "application/json",
            dataType: 'json',
            async: false,
            success: function (data, status, xhr) {
            },
            error: function (xhr) {
                alert("err: " + xhr.statusText);
            }
        })
    });
    function extendExamineeTime(row){
        //modal-ExtendIndTime
        //var id = row.parentElement.find("td:nth-child(4)").text();
    }

    function examineesdata(jsondata)
    {

        $.ajax({
            type: "GET",
            url: '@(System.Configuration.ConfigurationManager.AppSettings["webAPIURL"].ToString())/api/examschedule/' + AssessmentID + '/session',
            //data: ResponseDetails,
            contentType: "application/json",
            dataType: 'json',
            async: false,
            success: function (data, status, xhr) {
                $('#' + $id + ' #divExamTitle').html(data.Course);
                $('#' + $id + ' #divExamDuration').html(data.Duration + " Mins");
                //divStTime
                //divEndTime
                $('#' + $id + ' #divExamCenter').html(data.CenterName);
                $('#' + $id + ' #hdnexsessid').val(data.ExamSessionId);
            },
            error: function (xhr) {
                alert("err: " + xhr.statusText);
            }
        });

        var trHTML = '';
        $.each(jsondata, function (i, item) {
            trHTML += "<tr>"
            trHTML += '<td style="display:none"></td>';
            trHTML += '<td style="display:none">' + item.ExamineeRefId  + '</td>';
            trHTML += '<td style="">' + item.ExamineeName + '</td>';
            trHTML += '<td style="display:none">' + item.ExamineeId+ '</td>';
            trHTML += '<td align="center"></td>';
            trHTML += '<td align="center"></td>';
            trHTML += '<td align="center" style="display:none"></td>';
            trHTML += '<td align="center"><div id="circle1" class="circle"></div></td>';
            trHTML += '<td align="center"></td>';
            trHTML += '<td align="center"></td>';
            trHTML += '<td align="center"><div>';
            trHTML += '<a title="Send message" id="btnSendMsg" href="#" ><img src="@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Message.png?@DateTime.Now.Ticks.ToString()" height="30" width="30" /></a>';
            //trHTML += '&nbsp;&nbsp;<a title="Pause Exam" id="btnPauseExam" href="#"><img src="@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Pause.png?@DateTime.Now.Ticks.ToString()" height="30" width="30" /></a>';
            trHTML += '&nbsp;&nbsp;<a title="Add additional time" id="btnExExtendTime" onclick="extendExamineeTime(this)" href="#"><img src="@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/ExtendTime.png?@DateTime.Now.Ticks.ToString()" height="30" width="30" /></a>';
            trHTML += '&nbsp;&nbsp;&nbsp;<a title="Remove from list" href="#" id="btnDelEx" onclick="deleteRow(this)"><img src="@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Remove.png?@DateTime.Now.Ticks.ToString()" height="20" width="20" /></a>';
            @*trHTML += '&nbsp;&nbsp;<a title="Review for 100% Completion" href="#"><img src="@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/Review.png?@DateTime.Now.Ticks.ToString()" height="30" width="30"/></a>';*@
            //trHTML += '&nbsp;&nbsp;<a title="Report Irregularity" id="btnMisConduct" href="#"><img src="@(System.Configuration.ConfigurationManager.AppSettings["websiteURL"].ToString())/Images/MisConduct.png?@DateTime.Now.Ticks.ToString()" height="30" width="30"/></a>';
            trHTML += '<td style="display:none">' + item.ExamineeSessionId + '</td>';
            trHTML += '</div></td>';
            trHTML += "</tr>";
        });
        $('#tblnmlist'+ @ViewData["id"]).append(trHTML);
    }

    //$('#testbtn').click(function(){
    //    expandSidebar($(this));
    //})

    //code for timer count down
    var hours = 0;
    var minutes = 00;
    var seconds = 0;
    var SD;
    function setCountDown() {
        seconds++;
        if (seconds > 59) {
            minutes++;
            seconds = 0;
        }
        if (minutes > 59) {
            hours++;
            minutes = 0;
        }
        if (hours > 23) {
            hours = 0;
        }
        var h1 = hours; if (h1 == 0 || h1 < 10) { h1 = '0' + h1; }
        var m1 = minutes; if (m1 == 0 || m1 < 10) { m1 = '0' + m1; }
        var s1 = seconds; if (s1 == 0 || s1 < 10) { s1 = '0' + s1; }
        document.getElementById("countdown").innerHTML = h1 + ":" + m1 + ":" + s1;
        SD = window.setTimeout("setCountDown()", 1000);
        if ((s1 == '00' || s1 == '0') && (m1 == '00' || m1 == '0') && (h1 == '00' || h1 == '0')) {
            //seconds = "00"; window.clearTimeout(SD);
            //alert("You reached the time limit.");
            clearTimeout(SD);
            //$("#modal-ExamTimedOut").modal({
            //    backdrop: 'static',
            //    keyboard: false
            //});
            //document.getElementById("appear_exam").submit();
            //window.location = "result.php"
        }
    }

</script>

<style type="text/css">
    /* progress bar for question*/
    #progressbar, .pbar {
        width: 100%;
        text-align: center;
        background-color: #8ea5d0;
        color: white;
    }

        .pbar .ui-progressbar-value {
            display: block !important;
            background: green;
        }

    .ui-progressbar.beginning .ui-progressbar-value {
        background: rgb(24,64,118);
    }

    .container {
        background-color: #99CCFF;
        border: thick solid #808080;
        padding: 20px;
        margin: 20px;
    }

    .circle {
        border-radius: 50%;
        display: inline-block;
        margin-right: 20px;
    }

    #circle1 {
        width: 20px;
        height: 20px;
        background: grey;
    }
    /*general div settings*/
    div {
        padding: 0px;
        margin: 0px;
        /*border:solid;*/
        background: linear-gradient();
    }

    table tr td {
        padding: 0px;
        margin: 0px;
    }

    table tr {
        height: 20px;
    }
</style>
@*<script>var rootApp = angular.module('rootApp', ['appProctor'])</script>*@


@*<div ng-app="rootApp">
    <button class="btn btn-primary" id="testbtn">test</button>*@
@* dialog on exam start *@

@* dialog displayed when exam timed out *@


<div class="modal fade" id="modal-ExtendIndTime">
    <div class="modal-dialog" style="margin-top:200px">
        <div class="modal-content">
            <div class="modal-header" style="background-color:rgb(24,64,118);color:white">
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
                <h4 class="modal-title">eTesting</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="text-align:center">
                        @*<h4 class="label-warning">
                                Information: Client validation.
                            </h4>*@

                        <br />
                    </div>

                    <div class="col-md-12">
                        <div class="col-md-7">
                            Please enter time(Minutes) to extend time for <p id="extendTimeFor"></p>
                        </div>
                        <div class="col-md-3">
                            <input type="text" id="txtExExtendTime" class="form-control" />
                            <input type="text" id="hdnExId" class="form-control" style="display:none" />
                            <input type="text" id="hdnExamineeSessId" class="form-control" style="display:none" />
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary" id="btnExExtendTimeResonse" data-dismiss="modal">Continue</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*******************************************************@

<div class="modal fade" id="modal-Misconduct" ng-app="appProctor" ng-controller="conProctor" id="divProctor">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color:navy;color:white">
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
                <h4 class="modal-title">eTesting</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="text-align:center">
                        <br />
                        <br />
                        <br />
                        <h4>
                            Misconduct Reason
                        </h4>

                        <textarea id="txtMisconduct" class="form-control" style="padding-left:20px;padding-right:20px;height:40px" />
                        <br />
                        <br />
                        <br />
                        <br />
                        <button type="button" class="btn btn-default" id="btnSubmitMisconduct" data-dismiss="modal" style="width:110px">Ok</button>
                        <button type="button" class="btn btn-default" id="btnCancelMisconduct" data-dismiss="modal" style="width:110px">Cancel</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
@*******************************************************@

<div class="modal fade" id="modal-Confirm">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color:navy;color:white">
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
                <h4 class="modal-title">eTesting</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="text-align:center">
                        <input id="hdnCofirmFrom" type="text" style="display:none" />
                        <br />
                        <br />
                        <br />
                        <p id="pConfirm">Do you want delete client from exam?</p>
                        <br />
                        <br />
                        <button type="button" class="btn btn-default" id="btnYes" data-dismiss="modal" style="width:110px">Yes</button>
                        <button type="button" class="btn btn-default" id="btnNo" data-dismiss="modal" style="width:110px">No</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
@*******************************************************@

@*<div class="modal fade" id="modal-TabCloseConfirm" tabindex="-1" role="dialog"  aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header" style="background-color:navy;color:white">

                    <h4 class="modal-title">eTesting</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12" style="text-align:center">
                            <input id="hdnCofirmFrom" type="text" style="display:none" />
                            <input type="text" id="hdnTabNo" class="form-control" style="display:none" />
                            <br />
                            <br />
                            <br />
                            <p>Do you want to close Proctoring tab?</p>
                            <br />
                            <br />
                            <button type="button" class="btn btn-default" id="btnTBCloseYes" style="width:110px">Yes</button>
                            <button type="button" class="btn btn-default" id="btnTBCloseNo" style="width:110px">No</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>*@
@*******************************************************@
<input type="text" id="hdnTabNo" class="form-control" style="display:none" />
<div>
    <div class="row parentDiv" id="@ViewData["id"]">
        <div class="col-lg-12">
            @*<div ng-app="appProctor" ng-controller="conProctor" id="divProctor">*@
            <div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-2" style="width:150px">
                            <label>Exam Title:</label>
                            <input id="hdnexschid" type="text" style="display:none" />
                            <input id="hdnexsessid" type="text" style="display:none" />
                            <input id="hdnstatusid" type="text" style="display:none" />
                        </div>
                        <div class="col-md-3">
                            <div id="divExamTitle"></div>
                        </div>
                        <div class="col-md-2">
                            <label>Duration:</label>
                        </div>
                        <div class="col-md-1">
                            <div id="divExamDuration"></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-2" style="width:150px">
                            <label>Start Time:</label>
                        </div>
                        <div class="col-md-3" id="divStTime">

                        </div>
                        <div class="col-md-2">
                            <label>End Time:</label>
                        </div>
                        <div class="col-md-3" id="divEndTime">

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-2" style="width:150px">
                            <label>Center Name:</label>
                        </div>
                        <div class="col-md-3" id="divExamCenter">

                        </div>
                        <div class="col-md-2">
                            <label>Elapsed Time:</label>
                        </div>
                        <div class="col-md-1">
                            <span id="countdown" class="timer"></span>
                        </div>
                        <div class="col-md-5" style="text-align:right">
                            <button type="button" class="btn btn-group-lg btn-primary" id="btnGrpStartExam" style="width:110px">Start Exam</button>
                            @*<button type="button" class="btn btn-group-lg btn-primary" id="btnGrpTransferExam" style="width:110px">Transfer Exam</button>*@
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <table border=0 style="width:100%" id="@("tblnmlist"+ViewData["id"])" class="table table-striped table-hover table-bordered row-border">
                        <thead>
                            <tr>
                                <th class="text-center" style="display:none">
                                    SessionID
                                </th>
                                <th class="text-center" style="display:none">
                                    ID
                                </th>
                                <th class="text-center" style="width:15%">
                                    Client
                                </th>
                                <th class="text-center" style="width:5%;display:none">
                                    Username
                                </th>

                                <th class="text-center" style="width:10%">
                                    Started At
                                </th>
                                <th class="text-center" style="width:15%">
                                    Progress
                                </th>
                                <th class="text-center" style="width:10%;display:none">
                                    Extended Time (min)
                                </th>
                                <th class="text-center" style="width:10%">
                                    Status
                                </th>
                                <th class="text-center" style="width:10%">
                                    IP
                                </th>
                                <th class="text-center" style="width:10%">
                                    Client Host
                                    @*<th style="width:15%">
                                            Message
                                        </th>*@
                                <th class="text-center" style="width:10%">
                                    Action
                                </th>
                                <th class="text-center" style="display:none">
                                    ExamineeSessionId
                                </th>
                                @*<th class="text-center" style="width:5%">
                                        Review for 100% Completion
                                    </th>
                                    <th style="width:5%">
                                            Action
                                        </th>*@
                            </tr>
                        </thead>
                        <tbody></tbody>

                    </table>
                </div>

            </div>
        </div>
    </div>
</div>
@*<div class="" id="msglist" style="font-size:smaller;height:30px">
        Messages:
        <ul id="discussion"></ul>
    </div>*@
